<?php

/** Implements hooks schema */

function itonics_training_schema() {
    $schema = array();

    $schema['products'] = array(
        'description' => 'The base table for storing products.',
        'fields' => array(
            'id' => array(
                'description' => 'The primary identifier for products.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'title' => array(
                'description' => 'The title for the product.',
                'type' => 'varchar',
                'length' => 191,
                'not null' => TRUE,
            ),
            'type' => array(
                'description' => 'The status of the product \'Active\' \'Inactive\' .',
                'type' => 'varchar',
                'length' => 10,
                'not null' => TRUE,
                'default' => 'Active'
            ),
            'owner_email' => array(
                'description' => 'The email of product owner .',
                'type' => 'varchar',
                'length' => 191,
                'not null' => TRUE,
            ),
            'summary' => array(
                'description' => 'The plain text for summary of product.',
                'type' => 'text',
                'size' => 'small',
                'not null' => FALSE,
                'default' => NULL,
            ),
            'description' => array(
                'description' => 'The WSWGI text for description of product.',
                'type' => 'text',
                'size' => 'big',
                'not null' => FALSE,
                'default' => NULL,
            ),
            'image' => array(
                'description' => 'The image for the product in BLOB.',
                'type' => 'text',
                'size' => 'medium',
                'not null' => FALSE,
                'default' => NULL,
            ),
        ),
        'primary key' => array('id'),
    );

    $schema['categories'] = array(
      'description' => 'The base table for storing products categories.',
      'fields' => array(
        'id' => array(
            'description' => 'The primary identifier for categories.',
            'type' => 'serial',
            'unsigned' => TRUE,
            'not null' => TRUE,
        ),
        'title' => array(
            'description' => 'The title for the category.',
            'type' => 'varchar',
            'length' => 191,
            'not null' => TRUE,
        ),
      ),
      'primary key' => array('id'),
    );

    $schema['category_product'] = array(
        'description' => 'The pivot table for products with their categories.',
        'fields' => array(
            'category_id' => array(
                'description' => 'The foreign identifier for categories.',
                'type' => 'int',
                'length' => 10,
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'product_id' => array(
                'description' => 'The foreign identifier for products.',
                'type' => 'int',
                'length' => 10,
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
        ),
        'foreign keys' => array(
            'category_id' => array(
                'table' => 'categories',
                'columns' => array(
                  'category_id' => 'id',
                ),
            ),
            'product_id' => array(
                'table' => 'products',
                'columns' => array(
                  'product_id' => 'id',
                ),
            ),
        ),
    );

    return $schema;
}

/*
 * Implements hook_install
 */
function itonics_training_install() {
    /**
     * Install Fields
     */
    // Image Field for storing the image of a Pestle Segment created by using FIELD UI.

    $field_name = 'additional_image';
    $field = field_info_field($field_name);
    if (empty($field)) {
        $field = array(
            'field_name' => $field_name,
            'type' => 'file'
        );
        field_create_field($field);


        //  Create the instance on the bundle.
        $instance = array(
            'field_name' => $field_name, 
            'entity_type' => 'itonics_training', 
            'label' => t('Additional Image'), 
            'bundle' => 'itonics_training', 
            // If you don't set the "required" property then the field wont be required by default.
            'required' => FALSE,
            'settings' => array(
            // Here you inform either or not you want this field showing up on the registration form.
                'user_register_form' => 1,
                'file_extensions' => 'jpg, gif, png',
                'file_directory' => 'itonics_training/additional_images',
                'max_filesize' => '',
            ),
            'widget' => array(
                'type' => 'textfield',
            ), 
        );
        field_create_instance($instance);
    }
}

/**
 * Implements hook_uninstall().
 */
function itonics_training_uninstall() {
    // Delete itonics_training_image field attached from Field UI
    field_delete_field('additional_image');
}

/**
 * Adding field to define product price
 */
function itonics_training_update_7002() {

    $field_name = 'price';
    $field = field_info_field($field_name);
    if (empty($field)) {
        $field = array(
            'field_name' => $field_name,
            'type' => 'text', 
        );
        field_create_field($field);

        //  Create the instance on the bundle.
        $instance = array(
            'field_name' => $field_name, 
            'entity_type' => 'itonics_training', 
            'label' => t('Product Price'), 
            'bundle' => 'itonics_training', 
            // If you don't set the "required" property then the field wont be required by default.
            'required' => FALSE,
            'settings' => array(
                'precision' => 10,
                'scale' => 2,
                'decimal_separator' => '.',
            ),
            'instance_settings' => array(
                'min' => '',
                'max' => '',
                'prefix' => '',
                'suffix' => '',
            ),
            'default_widget' => 'number',
            'default_formatter' => 'number_decimal',
        );
        field_create_instance($instance);

    }
}